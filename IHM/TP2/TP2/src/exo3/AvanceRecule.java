/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package exo3;

import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import javax.swing.Timer;

/**
 *
 * @author Hugues
 */
public class AvanceRecule extends javax.swing.JFrame {

    private Etat etat;
    private Integer nbTic, compteur;
    private Timer tAvance, tRecule;

    public AvanceRecule() {
        initComponents();
        etat = Etat.INIT;
        nbTic = 0;
        initCompteur();
        afficherCompteur();
        
        // Initialisation du timer qui avancera le compteur
        tAvance = new Timer(1000, null);

        tAvance.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                timerAvanceActionPerfomed(evt);
            }
        });

        // Initialisation du timer qui avancera le compteur
        tRecule = new Timer(333, null);

        tRecule.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                timerReculeActionPerfomed(evt);
            }
        });
        
        activationInit();
    }

    private void incrementerCompteur() {
        compteur++;
    }

    private void decrementerCompteur() {
        compteur--;
    }

    private void initCompteur() {
        compteur = 0;
    }

    private void afficherCompteur() {
        jText.setText(compteur.toString());
    }

    private void afficherPouf() {
        jText.setText("POUF");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jText = new javax.swing.JLabel();
        jStart = new javax.swing.JButton();
        jAvance = new javax.swing.JButton();
        jRecule = new javax.swing.JButton();
        jStop = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jStart.setText("Start");
        jStart.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jStartActionPerformed(evt);
            }
        });

        jAvance.setText(">>");
        jAvance.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jAvanceActionPerformed(evt);
            }
        });

        jRecule.setText("<<");
        jRecule.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jReculeActionPerformed(evt);
            }
        });

        jStop.setText("Stop");
        jStop.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jStopActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(91, 91, 91)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jStart, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jRecule, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(60, 60, 60)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jAvance, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jStop, javax.swing.GroupLayout.DEFAULT_SIZE, 58, Short.MAX_VALUE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(165, 165, 165)
                        .addComponent(jText, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(134, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(85, 85, 85)
                .addComponent(jText, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(41, 41, 41)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jAvance)
                    .addComponent(jRecule))
                .addGap(26, 26, 26)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jStop)
                    .addComponent(jStart))
                .addContainerGap(81, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jReculeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jReculeActionPerformed
        switch (etat) {
            case INIT:
                throw new RuntimeException("Etat interdit");
            case AVANCE:
                etat = Etat.RECULE;
                // nbTic = nbTic;
                afficherCompteur();
                activationRecule();
                break;
            case RECULE:
                throw new RuntimeException("Etat interdit");
        }
    }//GEN-LAST:event_jReculeActionPerformed

    private void jAvanceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jAvanceActionPerformed
        switch (etat) {
            case INIT:
                throw new RuntimeException("Etat interdit");
            case AVANCE:
                throw new RuntimeException("Etat interdit");
            case RECULE:
                etat = Etat.AVANCE;
                // nbTic = nbTic;
                afficherCompteur();
                activationAvance();
                break;
        }
    }//GEN-LAST:event_jAvanceActionPerformed

    private void jStartActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jStartActionPerformed
        switch (etat) {
            case INIT:
                etat = Etat.AVANCE;
                nbTic = 0;
                initCompteur();
                afficherCompteur();
                activationAvance();
                break;
            case AVANCE:
                throw new RuntimeException("Etat interdit");
            case RECULE:
                throw new RuntimeException("Etat interdit");
        }
    }//GEN-LAST:event_jStartActionPerformed

    private void jStopActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jStopActionPerformed
        switch (etat) {
            case INIT:
                throw new RuntimeException("Etat interdit");
            case AVANCE:
                etat = Etat.INIT;
                nbTic = 0;
                afficherPouf();
                activationInit();
                break;
            case RECULE:
                etat = Etat.INIT;
                nbTic = 0;
                afficherPouf();
                activationInit();
                break;
        }
    }//GEN-LAST:event_jStopActionPerformed

    private void timerAvanceActionPerfomed(java.awt.event.ActionEvent evt) {
        switch (etat) {
            case INIT:
                throw new RuntimeException("Etat interdit");
            case AVANCE:
                if (nbTic < 15) {
                    etat = Etat.AVANCE;
                    nbTic++;
                    incrementerCompteur();
                    afficherCompteur();
                    activationAvance();
                } else {
                    etat = Etat.INIT;
                    nbTic = 0;
                    afficherCompteur();
                    activationInit();
                }
                break;
            case RECULE:
                throw new RuntimeException("Etat interdit");
        }
    }

    private void timerReculeActionPerfomed(java.awt.event.ActionEvent evt) {
        switch (etat) {
            case INIT:
                throw new RuntimeException("Etat interdit");
            case AVANCE:
                throw new RuntimeException("Etat interdit");
            case RECULE:
                if (nbTic > 0) {
                    etat = Etat.RECULE;
                    nbTic--;
                    decrementerCompteur();
                    afficherCompteur();
                    activationRecule();
                } else {
                    etat = Etat.INIT;
                    nbTic = 0;
                    afficherCompteur();
                    activationInit();
                }
                break;
        }
    }

    private void activationInit() {
        jStart.setEnabled(true);
        jStop.setEnabled(false);
        jAvance.setEnabled(false);
        jRecule.setEnabled(false);
        tAvance.stop();
        tRecule.stop();
    }

    private void activationAvance() {
        jStart.setEnabled(false);
        jStop.setEnabled(true);
        jAvance.setEnabled(false);
        jRecule.setEnabled(true);
        tAvance.start();
        tRecule.stop();
    }

    private void activationRecule() {
        jStart.setEnabled(false);
        jStop.setEnabled(true);
        jAvance.setEnabled(true);
        jRecule.setEnabled(false);
        tAvance.stop();
        tRecule.start();
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AvanceRecule.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AvanceRecule.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AvanceRecule.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AvanceRecule.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AvanceRecule().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jAvance;
    private javax.swing.JButton jRecule;
    private javax.swing.JButton jStart;
    private javax.swing.JButton jStop;
    private javax.swing.JLabel jText;
    // End of variables declaration//GEN-END:variables
}
